# ============================================
# SOGAS-RH Backend - Configuration Template
# ============================================
# Ce fichier est un TEMPLATE. Ne jamais committer de secrets réels.
# Pour l'utiliser :
#   1. Copier ce fichier en .env dans backend/
#   2. Remplacer toutes les valeurs CHANGE_ME par vos vrais secrets
#   3. Ajouter .env dans .gitignore (ne jamais committer)

# ============================================
# RUNTIME CONFIGURATION
# ============================================

# Environnement d'exécution (development | production | test)
NODE_ENV=development

# Port d'écoute du serveur Express
PORT=3000

# Origines autorisées pour CORS (séparateur ";")
# En DEV : frontend Vite (5173) + backend (3000)
# En PROD : domaines réels de votre organisation
CORS_ALLOWED_ORIGINS=http://localhost:5173;http://localhost:3000

# Répertoire des logs de l'application
# En DEV/Linux/macOS : chemin relatif ou absolu Unix
LOG_DIR=./logs
# En PROD Windows Server (on-prem ou VM cloud) :
# LOG_DIR=C:\ProgramData\SOGAS-RH\logs
# Assurez-vous que le dossier existe et que l'app a les droits d'écriture

# ============================================
# JWT & AUTHENTICATION
# ============================================

# Secrets pour signer les tokens JWT
# IMPORTANT : Utiliser des secrets forts et uniques en production
# Générer avec : node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_ACCESS_SECRET=CHANGE_ME_ACCESS_SECRET_MIN_32_CHARS
JWT_REFRESH_SECRET=CHANGE_ME_REFRESH_SECRET_MIN_32_CHARS

# Durées de validité des tokens
# Format : nombre + unité (s=secondes, m=minutes, h=heures, d=jours)
# Access Token : courte durée (15 min recommandé)
JWT_ACCESS_EXPIRES=15m
# Refresh Token : longue durée (30 jours recommandé)
JWT_REFRESH_EXPIRES=30d

# Nombre de rounds pour le hachage bcrypt (10-12 recommandé)
# Plus élevé = plus sécurisé mais plus lent
BCRYPT_SALT_ROUNDS=12

# Authentification multi-facteurs (true | false)
# Si activé, nécessite une configuration supplémentaire (TOTP, SMS, etc.)
MFA_ENABLED=false

# Optionnels : Paramètres JWT additionnels pour durcir la sécurité
# JWT_ISSUER=sogas-rh-backend
# JWT_AUDIENCE=sogas-rh-frontend

# ============================================
# DATABASE (MySQL)
# ============================================

# URL de connexion à la base de données MySQL
# Format : mysql://USER:PASSWORD@HOST:PORT/DATABASE
# En DEV : instance locale ou Docker
DATABASE_URL=mysql://root:password@localhost:3306/sogas_rh
# En PROD : instance gérée ou serveur dédié
# DATABASE_URL=mysql://sogas_user:STRONG_PASSWORD@prod-db-server:3306/sogas_rh_prod

# Optionnel : Configuration avancée de la connexion
# DATABASE_POOL_MIN=2
# DATABASE_POOL_MAX=10
# DATABASE_TIMEOUT=5000

# ============================================
# COOKIES & SESSION (Optionnel)
# ============================================

# Sécuriser les cookies en HTTPS uniquement (true en production)
COOKIE_SECURE=false

# Domaine des cookies (pour partage entre sous-domaines)
COOKIE_DOMAIN=localhost
# En PROD : COOKIE_DOMAIN=.sogas-rh.com (avec le point pour inclure les sous-domaines)

# ============================================
# NOTES IMPORTANTES
# ============================================
#
# 1. DÉVELOPPEMENT
#    - Copier ce fichier en .env dans backend/
#    - Remplacer toutes les valeurs CHANGE_ME
#    - Vérifier que .env est dans .gitignore
#
# 2. PRODUCTION (Windows Server on-prem ou VM cloud)
#    - Utiliser un coffre de secrets (Azure Key Vault, AWS Secrets Manager, etc.)
#    - Injecter les variables via le système (variables d'environnement Windows)
#    - Ne JAMAIS stocker de secrets en clair dans des fichiers
#    - Adapter LOG_DIR pour Windows (ex: C:\ProgramData\SOGAS-RH\logs)
#
# 3. SÉCURITÉ
#    - Générer des secrets forts (min 32 caractères aléatoires)
#    - Utiliser HTTPS en production (COOKIE_SECURE=true)
#    - Activer les restrictions CORS appropriées
#    - Ne jamais logguer les valeurs de ce fichier
#    - Voir backend/src/config/auth.ts pour l'usage des variables
#
# 4. CORS_ALLOWED_ORIGINS
#    - Séparateur : ";" (point-virgule)
#    - Exemple multi-origines : https://app.sogas-rh.com;https://admin.sogas-rh.com
#    - Ne pas mettre d'espaces autour du séparateur
#
# ============================================